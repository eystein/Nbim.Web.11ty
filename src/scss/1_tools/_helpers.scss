.divider {
	border-right: 1px solid #333;
	margin: 0 1rem;
}

// @import '1_tools/bootstrap-grid-settings';

// ~ Margin & padding helper ~
// See https://gist.github.com/dreamyguy/2fc16be42a01f21527c5a12bbb662f08
// Usage:
// Margin classes .m-[t|r|b|l]-[value]: margin-top [value]rem with px fallback.
// Padding classes .p-[t|r|b|l][value]: padding-top [value]rem with px fallback.

$sides: (top, bottom, left, right);
$space-values: (
	0,
	2,
	5,
	10,
	15,
	17,
	20,
	22,
	30,
	35,
	40,
	50,
	60,
	70,
	80,
	90,
	100,
	120
);

@each $side in $sides {
	@for $i from 1 through length($space-values) {
		.m-#{str-slice($side, 0, 1)}-#{nth($space-values, $i)} {
			margin-#{$side}: #{nth($space-values, $i)}px;
			margin-#{$side}: rem-calc(nth($space-values, $i), $base-font-size);
			@if nth($space-values, $i) >= 80 and ($side == top or $side == bottom) {
				@include media-breakpoint-down(sm) {
					margin-#{$side}: 60px;
				}
			}
		}

		.p-#{str-slice($side, 0, 1)}-#{nth($space-values, $i)} {
			padding-#{$side}: #{nth($space-values, $i)}px;
			padding-#{$side}: rem-calc(nth($space-values, $i), $base-font-size);
		}

		// To see helper margins, append the current url with '?helpers=1'
		.show-helpers {
			[class$='m-#{str-slice($side, 0, 1)}-#{nth($space-values, $i)}'] {
				position: relative;
				&::before {
					position: absolute;
					content: attr(class);
					position: absolute;
					font-size: 12px;
					z-index: 4;
					@if $side == top {
						color: green;
						background-color: rgba(199, 238, 0, 0.18);
						$result: rem-calc(nth($space-values, $i), $base-font-size);
						#{$side}: -$result;
						left: 0;
						text-align: right;
						height: rem-calc(nth($space-values, $i), $base-font-size);
						width: 100%;
					} @else if $side == bottom {
						color: rgb(140, 91, 0);
						background-color: rgba(238, 143, 0, 0.331);
						$result: rem-calc(nth($space-values, $i), $base-font-size);
						#{$side}: -$result;
						left: 0;
						text-align: right;
						height: rem-calc(nth($space-values, $i), $base-font-size);
						width: 100%;
					} @else {
						color: rgb(0, 128, 109);
						background-color: rgba(0, 128, 109, 0.351);
						#{$side}: 0;
						height: 100%;
						width: rem-calc(nth($space-values, $i), $base-font-size);
					}
				}
			}
		}
	}
}

// To see 'aspect-ratio' classes names, append the current url with '?helpers=1'
.show-helpers {
	[class*='aspect']:not([class*='section section']) {
		position: relative;
		&::after {
			position: absolute;
			content: attr(class);
			font-size: 12px;
			z-index: 5;
			color: white;
			padding: 10px;
			background-color: rgba(0, 0, 0, 0.6);
			left: 0;
			bottom: 0;
		}
	}
}

.center {
	margin: 0 auto;
}
.center-text {
	text-align: center;
}
.clickable {
	cursor: pointer;
}

// miscelaneous
.line-top {
	border-top: 1px solid $cl-gray;
}
.line-bottom {
	border-bottom: 1px solid $cl-gray;
}
.h-400 {
	height: 400px;
}

.font-bold {
	font-weight: 700;
	margin-left: 2px;
}

.italic {
	font-style: italic;
}

.hide {
	display: none;
}

.visually-hidden {
	@include visually-hidden();
}
